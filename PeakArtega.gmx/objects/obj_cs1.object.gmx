<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1920, 1080);
frame = -1;
timer = 0;
set = 308;
fade = 0;
s = 0;
apap = 0;
nomusic = 0;
sou = 0;
m = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//frame = 0
if(frame == -1)
{
    draw_set_alpha(1);
    draw_sprite_stretched(Black, 0, -1, -1, 1922, 541);
    draw_sprite_stretched(Black, 0, -1, 539, 1922, 541);
    if(timer == 60)
    {
        frame = 0;
        timer = 0;
    }
}
if(frame == 0)//Black
{ 
    if(nomusic == 0)
    {
        music = audio_play_sound(snd_cs1, 0, false);
        //audio_play_sound(snd_underwater, 0, false);
        nomusic = 1;
    }
    m = floor(audio_sound_get_track_position(music) / 10.28)
    draw_set_alpha(1);
    draw_sprite_stretched(Black, 0, -1, -1, 1922, 541);
    draw_sprite_stretched(Black, 0, -1, 539, 1922, 541);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 206;
        fade = 0;
        s = 0;
        instance_create(0, 0, obj_cs1skip);
        m = 0;
    }
}
else if(frame == 1)//Eyes Opening
{
    fade += 2;
    draw_set_alpha(1);
    s += 540/set + 2;
    draw_sprite_stretched(spr_cs1, 1, 0, -65 + (fade/10), 2098, 1180);
    draw_set_alpha(.3);
    //draw_sprite_stretched(spr_cs1, 3, 0, (fade/8), 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(Black, 0, 0, 0, 1920, 540 - s);
    draw_sprite_stretched(Black, 0, 0, 540 + s, 1920, 540);
    m = floor(audio_sound_get_track_position(music) / 17.14)
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 206;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 2)//Face
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 2, 0, 0, 1920, 1080);
    draw_set_alpha(.2);
    draw_sprite_stretched(spr_cs1, 4, 0, 40 - (fade/6), 1920, 1080);
    draw_sprite_stretched(spr_cs1, 33, 0, 30 - (fade/2), 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 24.00)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 206;
        fade = 0;
        s = 0;
        m = 0;
    }
}
/*else if(timer &lt;= set &amp;&amp; frame == 3)//Eyes
{
    fade += 1;
    draw_sprite_stretched(spr_cs1, 2, 0, 0, 1920, 1080);
    draw_set_alpha(.6);
    draw_sprite_stretched(spr_cs1, 5, -96, 30 - (fade/6), 2112, 1188);
    draw_set_alpha(1);
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(timer == set)
    {
        frame += 1;
        timer = 0;
        set = 206;
        fade = 0;
        s = 0;
    }
}*/
else if(frame == 3)//Goin up
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 7, 0, 0, 1920, 1080);
    draw_set_alpha(.1);
    draw_sprite_stretched(spr_cs1, 6, 0, 40 - (fade/4), 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 30.85)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 206;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 4)//Hand Goin up
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 9, 0, 0, 1920, 1080);
    draw_set_alpha(.4);
    draw_sprite_stretched(spr_cs1, 8, 0, 75 - (fade/3), 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 37.71)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 155;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 5)//Ah ice!
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 11, 0, -50 + (fade/8), 2098, 1180);
    draw_set_alpha(.5);
    draw_sprite_stretched(spr_cs1, 10, 0, -80 + (fade/3), 2098, 1180);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 42.85)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 155;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 6)//WTf ice tho
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 13, 0, 0, 1920, 1080); //ice
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 12, 0, -30 + (fade/6), 1920, 1080); //guy
    draw_set_alpha(.7);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080); //filter
    m = floor(audio_sound_get_track_position(music) / 48.00)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 155;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 7)//A hole?
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 16, -50 + (fade/8), 0, 2098, 1180);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 15, 0, -20 + (fade/8), 1920, 1080);
    draw_set_alpha(.8);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 35, -50 + (fade/8), 0, 2098, 1180);
    m = floor(audio_sound_get_track_position(music) / 53.14)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 155;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 8)//Get me outa here!
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 17, -65, -50 + (fade/8), 2098, 1180);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 18, 50, 70 - (fade/12), 1920, 1080);
    draw_set_alpha(.6);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 36, -65, -50 + (fade/8), 2098, 1180);
    m = floor(audio_sound_get_track_position(music) / 57.80)
    n = floor(audio_sound_get_track_position(music) / 58.00)
    a = floor(audio_sound_get_track_position(music) / 58.28)
    if(m == 1)
    {
        apap += .1;
        draw_set_alpha(apap);
        draw_sprite_stretched(spr_cs1, 19, 0, 0, 1920, 1080);   
        draw_sprite_stretched(spr_cs1, 22, 0, 0, 1920, 1080);   
        draw_set_alpha(1);
        if(n == 1 &amp;&amp; sou == 0)
        {
            //audio_play_sound(snd_OPexplosion, 5, false);
            sou = 1;
            audio_play_sound(snd_OPexplosion, 10, false);
            audio_play_sound(snd_OPexplosion2, 10, false);
        }     
    }
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(a == 1)
    {
        frame += 1;
        timer = 0;
        set = 170;
        fade = 0;
        s = 0;
        a = 0;
        m = 0;
        n = 0;
    }
}
else if(frame == 9)//Falling
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 20, -50, -35 - (fade/12), 2020, 1136);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 21, 0, 20 + (fade/4), 1920, 1080);
    draw_set_alpha(.8);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 37, -50, -35 - (fade/12), 2020, 1136);
    m = floor(audio_sound_get_track_position(music) / 63.42)
    if(timer &lt; 21)
    {
        apap -= .05;
        draw_set_alpha(apap);
        draw_sprite_stretched(spr_cs1, 19, -500, -282, 2920, 1643); 
        draw_sprite_stretched(spr_cs1, 22, 0, 0, 1920, 1080);     
        draw_set_alpha(1);     
    }
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 60;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 10)//Cut eyes closed
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 23, -50, -35 + (fade/8), 2020, 1136);
    draw_set_alpha(.6);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 66.42)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 180;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 11)//Falling deeper
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 20, -50, -10 - (fade/12), 2020, 1136);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 21, 0, 350 + (fade/4), 1920, 1080);
    draw_set_alpha(.8);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 37, -50, -10 - (fade/12), 2020, 1136);
    m = floor(audio_sound_get_track_position(music) / 72.00)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 60;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 12)//Cut eyes open
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 24, -50, 0 - (fade/8), 2020, 1136);
    draw_set_alpha(.6);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 73.71)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 240;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 13)//Going back up far
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 20, -50, -30 + (fade/12), 2020, 1136);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 26, 75, 120 - (fade/4), 1920, 1080);
    draw_set_alpha(.8);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 37, -50, -30 + (fade/12), 2020, 1136);
    m = floor(audio_sound_get_track_position(music) / 82.28)
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 112;
        fade = 0;
        s = 0;
        apap = 0;
        m = 0;
    }
}
else if(frame == 14)//Going back up close
{
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 27, -50, -40 + (fade/8), 2020, 1136);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 28, 0, 120 - (fade/5), 1920, 1080);
    draw_set_alpha(.5);
    draw_sprite_stretched(spr_cs1, 14, 0, 0, 1920, 1080);
    draw_set_alpha(1);
    m = floor(audio_sound_get_track_position(music) / 85.71)
    //draw_sprite_stretched(spr_cs1, 39, -50, -40 + (fade/8), 2020, 1136);
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(timer &gt;= 90)
    {
        apap += .1;
        draw_set_alpha(apap);
        draw_sprite_stretched(spr_cs1, 32, 0, 0, 1920, 1080);   
        draw_set_alpha(1);     
    }
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 308;
        apap = 1;
        fade = 0;
        s = 0;
        m = 0;
    }
}
else if(frame == 15)//Oh HAI Corb
{
    //audio_stop_sound(snd_underwater);
    fade += 1;
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 29, -230, -250 + (fade/7), 2420, 1361);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 30, -230, -150 + (fade/5), 2420, 1361);
    draw_set_alpha(1);
    draw_sprite_stretched(spr_cs1, 31, -230, -220 + (fade/3), 2420, 1361);
    draw_set_alpha(.45);
    draw_sprite_stretched(spr_cs1, 32, 0, 0, 1920, 1080);
    m = floor(audio_sound_get_track_position(music) / 96.00)
    if(timer &lt;= 21)
    {
        apap -= .05;
        draw_set_alpha(apap);
        draw_sprite_stretched(spr_cs1, 32, 0, 0, 1920, 1080);   
        draw_set_alpha(1);     
    }
    else if(timer &gt;= 278)
    {
        apap += .05;
        draw_set_alpha(apap);
        draw_sprite_stretched(spr_cs1, 32, 0, 0, 1920, 1080);   
        draw_set_alpha(1);        
    }
    //draw_sprite_stretched(spr_cs1, 0, 0, 0, 1920, 1080);
    if(m == 1)
    {
        frame += 1;
        timer = 0;
        set = 155;
        fade = 0;
        s = 0;
        m = 0;
    }
}
if(frame == 16)
{
    room_goto(rm_mountaintop);
}
draw_set_alpha(1);
draw_sprite_stretched(spr_cs1, 32, -500, -100, 500, 1280);
draw_sprite_stretched(spr_cs1, 32, 0, 1080, 1920, 500);
draw_sprite_stretched(spr_cs1, 32, 1920, -100, 500, 1280);
draw_sprite_stretched(spr_cs1, 32, 0, -500, 1920, 500);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
