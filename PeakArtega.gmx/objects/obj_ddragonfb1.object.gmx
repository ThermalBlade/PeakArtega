<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dr1earthquake</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>quaketype = 0;
touchingpl = 0;
startmoving = 0;
image_speed = 0;
setonce = 0;
playerturn = 0;
imagespeed = 0;
white = 0;
setwhite = 0;
takingdamage = 0;
dead = 0;
died = 0;
enemyiam = 3;

defence = 1;

attacktype = 0;
beginwaittime = 0;
endingturn = 1;
endturn = 1;

instance_create(0, 0, obj_hitcircleddragon3);
instance_create(0, 0, obj_closemeleecirc3);





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
if(dead == 1)
{
    if(image_index == 2 &amp;&amp; died == 0)
    {
        imagespeed = 0;
        depth = 10;
        obj_combat.enemycount -= 1;
        if(enemyiam == 1)
        {
            obj_combat.enemy1 = 0;
            with(obj_closemeleecirc1){instance_destroy();}
            //with(obj_hitcircleddragon1){instance_destroy();}
        }
        else if(enemyiam == 2)
        {
            obj_combat.enemy2 = 0;     
            with(obj_closemeleecirc2){instance_destroy();}
            //with(obj_hitcircleddragon2){instance_destroy();}    
        }
        else if(enemyiam == 3)
        {
            obj_combat.enemy3 = 0;     
            with(obj_closemeleecirc3){instance_destroy();}
            //with(obj_hitcircleddragon3){instance_destroy();}        
        }
        died = 1;
    }
    else if(died == 0)
    {
        sprite_index = spr_dr1dying;
        imagespeed = .03;
        scr_imageindex(imagespeed);
    }
}
else
{
    if(obj_combat.timer &gt;= 20 &amp;&amp; obj_combat.timer != 0)
    {
        endturn = 0;
    }
    else if(obj_combat.timer == 0)
    {
        image_index = 0;
        sprite_index = spr_dr1down;
        imagespeed = 0;
        setonce = 0;
    }
    else
    {
        endingturn = 1;
    }
    
    if(startmoving != beginwaittime)
    {
        startmoving += 1;
        obj_combat.timing = .08;
    }
    else
    {
        if(attacktype == 0 &amp;&amp; endingturn == 1)
        {
            if(obj_combat.timer &gt; 10)
            {
                endingturn = 0;
            }
        }
        else if(endingturn == 0)
        {
            if(setonce == 0)
            {
                sprite_index = spr_dr1tired;
                imagespeed = .03;
                setonce = 1;
            }
            if(white != 0)
            {
                sprite_index = spr_dr1downwhite;
                setwhite = 1;
            }
            else if(setwhite == 1)
            {
                sprite_index = spr_dr1down;
                setwhite = 0;
            }
            if(takingdamage != 0)
            {
                if(enemyiam == 1)
                {
                    obj_combat.enemy1health += takingdamage * defence;
                }
                else if(enemyiam == 2)
                {
                    obj_combat.enemy2health += takingdamage * defence;              
                }
                else if(enemyiam == 3)
                {
                    obj_combat.enemy3health += takingdamage * defence;                  
                }
            }
        }
        scr_imageindex(imagespeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_combatplayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,8</point>
    <point>36,8</point>
    <point>36,46</point>
    <point>12,46</point>
  </PhysicsShapePoints>
</object>
