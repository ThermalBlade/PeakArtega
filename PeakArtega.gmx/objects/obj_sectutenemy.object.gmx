<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tutorialdunenemydown</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>touchingpl = 0;
startmoving = 0;
image_speed = 0;
setonce = 0;
playerturn = 0;
imagespeed = 0;
white = 0;
setwhite = 0;
takingdamage = 0;
dead = 0;
died = 0;
enemyiam = 1;
firstturn = 0;

attacktype = 0;
beginwaittime = 1;
endingturn = 1;
endturn = 1;

defence = 2.5;

instance_create(0, 0, obj_genhitcircle1);
obj_genhitcircle1.object = obj_sectutenemy;
instance_create(0, 0, obj_closemeleecirc1);
instance_create(0, 0, obj_tutenemyhitbox1);
obj_tutenemyhitbox1.object = obj_sectutenemy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(dead == 1)
{
    if(image_index == 2 &amp;&amp; died == 0)
    {
        imagespeed = 0;
        depth = 10;
        with(obj_tutenemyhitbox1)
        {
            instance_destroy();
            depth = 50000;
        }
        obj_combat.enemycount -= 1;
        if(enemyiam == 1)
        {
            obj_combat.enemy1 = 0;
            with(obj_closemeleecirc1){instance_destroy();}
            //with(obj_hitcircleddragon1){instance_destroy();}
        }
        else if(enemyiam == 2)
        {
            obj_combat.enemy2 = 0;     
            with(obj_closemeleecirc2){instance_destroy();}
            //with(obj_hitcircleddragon2){instance_destroy();}    
        }
        else if(enemyiam == 3)
        {
            obj_combat.enemy3 = 0;     
            with(obj_closemeleecirc3){instance_destroy();}
            //with(obj_hitcircleddragon3){instance_destroy();}        
        }
        died = 1;
        global.enemy2 = 1;
    }
    else if(died == 0)
    {
        sprite_index = spr_tutorialenemydowndead;
        imagespeed = .03;
        scr_imageindex(imagespeed);
    }
}
else if(obj_combat.playerdied == 0)
{
    depth = -y;
    if(obj_combat.newturn == 1)
    {
        setonce = 0;
        if(firstturn == 0)
        {
            imagespeed = .05;
            if(global.advantage == 0)
            {
                obj_combat.timing = .12;
            }
            else if(global.advantage == 1)
            {
                obj_combat.timing = .06;
            }
            else
            {
                obj_combat.timing = .09;
            }
            firstturn =1;
        }
        else
        {
            obj_combat.timing = random_range(.06, .12);
            imagespeed = .05;
        }
    }
    else
    {
        endingturn = 1;
    }
    
    if(startmoving != beginwaittime)
    {
        startmoving += 1;
    }
    else
    {
        touchingpl = obj_genhitcircle1.touchingplayer;
        if(endingturn == 1)
        {
            if(setonce == 0)
            {
                setonce = 1;
            }
            if(white != 0)
            {
                sprite_index = spr_tutorialdunenemydownwhite;
                setwhite = 1;
            }
            else if(setwhite == 1)
            {
                sprite_index = spr_tutorialdunenemydown;
                setwhite = 0;
            }
            if(takingdamage != 0)
            {
                obj_combat.enemy1health += takingdamage * defence;
            }
        }
        scr_imageindex(imagespeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
